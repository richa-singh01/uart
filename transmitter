
module pipo_reg( input clk, input [7:0]din, input ld, input rs_enable, input rst,  output reg [7:0]dout, output serial_out);
  
  always@(posedge clk)
    begin
      if(rst)
        dout <= 8'b0;
      else if(ld)
        dout <= din;
      else 
        if(rs_enable)
          dout <= {dout[0], dout[7:1]};
      else 
        dout <= dout;
    end
  
  assign serial_out = dout[0];
  
endmodule:pipo_reg 



module parity(input [7:0]dout, output parity);
  xor(parity,dout[0],dout[1],dout[2],dout[3],dout[4],dout[5],dout[6],dout[7]);
endmodule



module mux4to1(input serial_out,input parity, input [1:0] sel,output reg out);  

  always @ (sel) begin
    case(sel)
      2'b00: out <= 1'b0;
      2'b01: out <= serial_out;
      2'b10: out <= parity;
      2'b11: out <= 1'b1;
      default: out <= 1'b1;  
    endcase
  end
endmodule
