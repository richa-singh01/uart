
module top;
  reg clk;
  reg [7:0]din;
  reg ld;
  reg rs_enable;
  reg rst;
  reg [1:0]sel;
  wire [7:0]dout;
  wire serial_out;
  wire parity;
  wire out;
  
  pipo_reg p1(clk, din, ld, rs_enable, rst, dout, serial_out);
  parity p2(dout,parity);
  mux4to1 p3(serial_out,parity,sel,out);
  initial
    begin
      clk = 1'b0;
    end
  
  always #5 clk = ~clk;
  
  initial 
    begin
      din = 8'b0; 
      ld = 1'b0;
      rs_enable = 1'b0;
      rst = 1'b1;
      
     #5;
      
      rst = 1'b0;
      
      #10;
      din = 8'b10010110;
      ld = 1'b1;
      rst = 1'b0;
      sel = 2'b00;
      
      
      #10;
      ld = 1'b0;
      rs_enable = 1'b1;
      sel = 2'b01;
      #80;
      sel = 2'b10;
      #10;
      sel = 2'b11;
      
     
      #10;
      $finish;
    end
  
  initial
    begin
      $dumpfile("dump.vcd");
      $dumpvars(1);
    end
  
endmodule:top
